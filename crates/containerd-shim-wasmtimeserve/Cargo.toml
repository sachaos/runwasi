[package]
name = "containerd-shim-wasmtimeserve"
version.workspace = true
edition.workspace = true

[dependencies]
anyhow = { workspace = true }
containerd-shim = { workspace = true }
containerd-shim-wasm = { workspace = true }
log = { workspace = true }
oci-spec = { workspace = true, features = ["runtime"] }
ttrpc = { workspace = true }

# We are not including the `async` feature here:
# 1. Because we don't even use it
# 2. Because it pulls in a lot of dependencies that we don't need
# 3. Because that dependency (wasmtime-fiber) links to native code
# 4. The wasmedge shim also uses wasmtime-fiber... which means those transative dependencies need to be the same or compilation fails
wasmtime = { version = "16.0", default-features = false, features = [
    "cache",
    "wat",
    "profiling",
    "parallel-compilation",
    "cranelift",
    "pooling-allocator",
    "demangle",
    "addr2line",
    "coredump",
    "debug-builtins",
    'component-model',
]}
wasmtime-wasi = { version = "16.0", features = ["exit"] }
wasmtime-wasi-http = "16.0"
wasmtime-runtime = "16.0"
wasi-common = "16.0"
hyper = "1.1.0"
tokio = "1.35.1"
http-body = "1.0.0"
http-body-util = "0.1.0"
bytes = "1.5.0"

[dev-dependencies]
containerd-shim-wasm = { workspace = true, features = ["testing"] }
serial_test = { workspace = true }

[[bin]]
name = "containerd-shim-wasmtimeserve-v1"
path = "src/main.rs"
